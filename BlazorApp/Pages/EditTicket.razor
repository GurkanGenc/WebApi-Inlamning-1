@page "/editticket"
@*<Auth />*@
<div class="container"><h3>Edit Ticket</h3></div>

<EditForm Model="model" OnSubmit="OnSubmit">
    <div class="container">
        <div class="mb-3">
            <label for="ticketid" class="form-label">Ticket Id</label>
            <InputText type="text" class="form-control" id="ticketid" @bind-Value="model.Id" />
        </div>

        <div class="mb-3">
            <label for="userid" class="form-label">User Id</label>
            <InputText type="text" class="form-control" id="userid" @bind-Value="model.UserId" />
        </div>

        <div class="mb-3">
            <label for="customername" class="form-label">Customer Name</label>
            <InputText type="text" class="form-control" id="customername" @bind-Value="model.CustomerName" />
        </div>

        @*<div class="mb-3">
            <label for="email" class="form-label">Created by</label>
            <InputText type="date" class="form-control" id="email" @bind-Value="model.Created" />
        </div>

        <div class="mb-3">
            <label for="pass" class="form-label">Changed by</label>
            <InputText type="text" class="form-control" id="password" @bind-Value="model.Changed" />
        </div>*@

    <InputSelect @bind-Value="model.Status">
        <option value="" title="Status...">Status...</option>
        @foreach (var value in Enum.GetValues(typeof(TicketStatus)))
        {
            <option>@value</option>

        }
    </InputSelect>

        <button class="btn btn-success" type="submit">Edit</button>
    </div>
</EditForm>
@code {
    private CreateTicketModel model { get; set; }

    protected override void OnInitialized()
    {
        model = new CreateTicketModel();
    }

    private async Task OnSubmit()
    {
        // Saves a Http Response Message.
        var response = await Http.PutAsJsonAsync<CreateTicketModel>($"https://localhost:44397/api/Tickets/{model.Id}", model);

        NavManager.NavigateTo("/tickets");
    }


    public class CreateTicketModel
    {
        public string Id { get; set; }

        public string UserId { get; set; }

        public string CustomerName { get; set; }

        public DateTime Created { get; set; }

        public DateTime Changed { get; set; }

        public TicketStatus Status { get; set; }
    }
    public enum TicketStatus
    {
        Notstarted,
        Ongoing,
        Closed
    }
}
